// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetService_Project.Models;

#nullable disable

namespace PetService_Project_Api.Migrations
{
    [DbContext(typeof(dbPetService_ProjectContext))]
    [Migration("20250513022225_InitialSetup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TChatMessage", b =>
                {
                    b.Property<int>("FMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fMessage_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FMessageId"));

                    b.Property<string>("FAttachmentUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fAttachmentUrl");

                    b.Property<DateTime?>("FDeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("fDeletedAt");

                    b.Property<bool>("FIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fIsDeleted");

                    b.Property<bool>("FIsRead")
                        .HasColumnType("bit")
                        .HasColumnName("fIsRead");

                    b.Property<string>("FMessageText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fMessageText");

                    b.Property<string>("FMessageType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fMessageType");

                    b.Property<DateTime>("FSendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fSendTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FSenderId")
                        .HasColumnType("int")
                        .HasColumnName("fSender_id");

                    b.Property<string>("FSenderRole")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fSenderRole");

                    b.Property<int>("FSessionId")
                        .HasColumnType("int")
                        .HasColumnName("fSession_id");

                    b.HasKey("FMessageId")
                        .HasName("PK__tChatMes__CB84189CEBDFDF3D");

                    b.HasIndex("FSessionId");

                    b.ToTable("tChatMessage", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TChatSession", b =>
                {
                    b.Property<int>("FSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fSession_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FSessionId"));

                    b.Property<int>("FEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("fEmployee_id");

                    b.Property<DateTime?>("FEndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fEndTime");

                    b.Property<DateTime?>("FLastMessageTime")
                        .HasColumnType("datetime")
                        .HasColumnName("fLastMessageTime");

                    b.Property<int>("FMemberId")
                        .HasColumnType("int")
                        .HasColumnName("fMember_id");

                    b.Property<DateTime>("FStartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fStartTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("進行中");

                    b.HasKey("FSessionId")
                        .HasName("PK__tChatSes__6C5424881F991C5F");

                    b.HasIndex("FEmployeeId");

                    b.HasIndex("FMemberId");

                    b.ToTable("tChatSession", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TDistrict", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FDistrictName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fDistrictName");

                    b.Property<bool>("FIsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("fIs_Delete");

                    b.HasKey("FId")
                        .HasName("PK__tDistric__D9F8227C06F2C2D0");

                    b.ToTable("tDistrict", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TEmployee", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fAccount");

                    b.Property<string>("FAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fAddress");

                    b.Property<DateTime?>("FBirth")
                        .HasColumnType("date")
                        .HasColumnName("fBirth");

                    b.Property<DateTime?>("FCreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("fCreated_at");

                    b.Property<string>("FEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fEmail");

                    b.Property<string>("FGender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("fGender");

                    b.Property<string>("FImage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fImage");

                    b.Property<string>("FName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fName");

                    b.Property<string>("FPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fPassword");

                    b.Property<string>("FPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fPhone");

                    b.Property<int?>("FPosition")
                        .HasColumnType("int")
                        .HasColumnName("fPosition");

                    b.HasKey("FId")
                        .HasName("PK_tStaff_Manage");

                    b.ToTable("tEmployee", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TEmployeePhoto", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<int>("FEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("fEmployeeId");

                    b.Property<string>("FImagepath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fImagepath");

                    b.HasKey("FId")
                        .HasName("PK__tEmploye__D9F8227C4D4139AD");

                    b.HasIndex("FEmployeeId");

                    b.ToTable("tEmployee_Photo", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TEmployeeService", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<int>("FAcceptPetType")
                        .HasColumnType("int")
                        .HasColumnName("fAcceptPetType");

                    b.Property<string>("FDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fDescription");

                    b.Property<string>("FDescriptionShort")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fDescriptionShort");

                    b.Property<int?>("FDistance")
                        .HasColumnType("int")
                        .HasColumnName("fDistance");

                    b.Property<int>("FDistrictId")
                        .HasColumnType("int")
                        .HasColumnName("fDistrictId");

                    b.Property<int>("FEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("fEmployeeId");

                    b.Property<bool>("FIsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("fIs_Delete");

                    b.Property<decimal?>("FLatitude")
                        .HasColumnType("decimal(9, 6)")
                        .HasColumnName("fLatitude");

                    b.Property<decimal?>("FLongitude")
                        .HasColumnType("decimal(9, 6)")
                        .HasColumnName("fLongitude");

                    b.Property<int>("FPetSize")
                        .HasColumnType("int")
                        .HasColumnName("fPetSize");

                    b.Property<decimal?>("FPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("fPrice");

                    b.HasKey("FId")
                        .HasName("PK__tEmploye__D9F8227CC02F0E41");

                    b.HasIndex("FDistrictId");

                    b.HasIndex("FEmployeeId");

                    b.ToTable("tEmployee_Service", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TFaq", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FAnswer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fAnswer");

                    b.Property<string>("FCategory")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fCategory");

                    b.Property<DateTime?>("FCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("fCreate_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("FIsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("fIs_Active");

                    b.Property<string>("FQuestion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fQuestion");

                    b.Property<int?>("FSortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("fSort_Order");

                    b.HasKey("FId")
                        .HasName("PK__FAQ__D9F8227C5CF74266");

                    b.ToTable("tFAQ", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.THotel", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fAddress");

                    b.Property<string>("FEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fEmail");

                    b.Property<string>("FImage1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fImage_1");

                    b.Property<string>("FImage2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fImage_2");

                    b.Property<string>("FImage3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fImage_3");

                    b.Property<bool>("FIsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("fIs_delete");

                    b.Property<decimal?>("FLatitude")
                        .HasColumnType("decimal(10, 7)")
                        .HasColumnName("fLatitude");

                    b.Property<decimal?>("FLongitude")
                        .HasColumnType("decimal(10, 7)")
                        .HasColumnName("fLongitude");

                    b.Property<string>("FName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fName");

                    b.Property<string>("FPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fPhone");

                    b.HasKey("FId")
                        .HasName("PK__tHotels__D9F8227C9F403BD1");

                    b.ToTable("tHotels", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.THotelItem", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fDescription");

                    b.Property<int?>("FHotelId")
                        .HasColumnType("int")
                        .HasColumnName("fHotel_id");

                    b.Property<bool>("FIsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("fIs_delete");

                    b.Property<string>("FName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fName");

                    b.Property<byte?>("FType")
                        .HasColumnType("tinyint")
                        .HasColumnName("fType");

                    b.HasKey("FId")
                        .HasName("PK__tHotel_I__D9F8227C564B3BC3");

                    b.HasIndex("FHotelId");

                    b.ToTable("tHotel_Items", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.THotelReview", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fContent");

                    b.Property<DateTime?>("FCreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("fCreated_at");

                    b.Property<int?>("FHotelId")
                        .HasColumnType("int")
                        .HasColumnName("fHotel_id");

                    b.Property<bool>("FIsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("fIs_delete");

                    b.Property<int?>("FMemberId")
                        .HasColumnType("int")
                        .HasColumnName("fMember_id");

                    b.Property<int?>("FOrderId")
                        .HasColumnType("int")
                        .HasColumnName("fOrder_id");

                    b.Property<byte?>("FRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("fRating");

                    b.Property<int?>("FRoomtypeId")
                        .HasColumnType("int")
                        .HasColumnName("fRoomtype_id");

                    b.Property<DateTime?>("FUpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("fUpdated_at");

                    b.HasKey("FId")
                        .HasName("PK__tHotel_R__D9F8227C36AD9A13");

                    b.HasIndex("FHotelId");

                    b.HasIndex("FMemberId");

                    b.HasIndex("FOrderId");

                    b.HasIndex("FRoomtypeId");

                    b.ToTable("tHotel_Reviews", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TMember", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fAddress");

                    b.Property<string>("FAspNetUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("fAspNetUserId");

                    b.Property<bool?>("FBlackList")
                        .HasColumnType("bit")
                        .HasColumnName("fBlack_list");

                    b.Property<DateTime?>("FCreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fCreated_date");

                    b.Property<string>("FEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fEmail");

                    b.Property<bool?>("FEmailVerfifcation")
                        .HasColumnType("bit")
                        .HasColumnName("fEmail_verfifcation");

                    b.Property<string>("FGoogleAvatarUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fGoogleAvatarUrl");

                    b.Property<string>("FImage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fImage");

                    b.Property<string>("FInfo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fInfo");

                    b.Property<bool>("FIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("fIsDeleted");

                    b.Property<DateTime?>("FLastLoginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fLastLoginDate");

                    b.Property<string>("FLoginProvider")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("fLoginProvider");

                    b.Property<string>("FName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fName");

                    b.Property<string>("FPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fPassword");

                    b.Property<string>("FPhone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("fPhone");

                    b.Property<string>("FProviderKey")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fProviderKey");

                    b.HasKey("FId");

                    b.ToTable("tMember", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TMemberSource", b =>
                {
                    b.Property<int>("FMemberId")
                        .HasColumnType("int");

                    b.Property<int>("FSourceId")
                        .HasColumnType("int");

                    b.HasKey("FMemberId", "FSourceId")
                        .HasName("PK_tMemberSource");

                    b.HasIndex("FSourceId");

                    b.ToTable("tMemberSource", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TNews", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fCategory");

                    b.Property<string>("FContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fContent");

                    b.Property<DateTime?>("FCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("fCreate_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FEndDate")
                        .HasColumnType("date")
                        .HasColumnName("fEnd_Date");

                    b.Property<string>("FImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fImage_Path");

                    b.Property<bool?>("FIsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("fIs_Active");

                    b.Property<bool?>("FIsPinned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("fIs_Pinned");

                    b.Property<DateTime?>("FStartDate")
                        .HasColumnType("date")
                        .HasColumnName("fStart_Date");

                    b.Property<string>("FTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fTitle");

                    b.HasKey("FId")
                        .HasName("PK__tNews__D9F8227C67DA9D72");

                    b.ToTable("tNews", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TNewsFile", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FFileName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fFile_Name");

                    b.Property<string>("FFilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("fFile_Path");

                    b.Property<int?>("FNewsId")
                        .HasColumnType("int")
                        .HasColumnName("fNews_Id");

                    b.Property<DateTime?>("FUploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("fUpload_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("FId")
                        .HasName("PK__NewsFile__D9F8227CA931B71B");

                    b.HasIndex("FNewsId");

                    b.ToTable("tNewsFiles", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TOrder", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<DateTime?>("FCreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("fCreated_at");

                    b.Property<bool>("FIsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("fIs_delete");

                    b.Property<int?>("FMemberId")
                        .HasColumnType("int")
                        .HasColumnName("fMemberId");

                    b.Property<string>("FOrderStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fOrderStatus");

                    b.Property<string>("FOrderType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fOrderType");

                    b.Property<decimal?>("FTotalAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("fTotalAmount");

                    b.Property<DateTime?>("FUpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("fUpdated_at");

                    b.HasKey("FId");

                    b.ToTable("tOrders", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TOrderHotelDetail", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FAdditionlMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FCheckIn")
                        .HasColumnType("datetime")
                        .HasColumnName("fCheckIn");

                    b.Property<DateTime?>("FCheckOut")
                        .HasColumnType("datetime")
                        .HasColumnName("fCheckOut");

                    b.Property<int?>("FHotelId")
                        .HasColumnType("int")
                        .HasColumnName("fHotelId");

                    b.Property<int?>("FOrderId")
                        .HasColumnType("int")
                        .HasColumnName("fOrderId");

                    b.Property<decimal?>("FPricePerRoom")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("fPricePerRoom");

                    b.Property<int?>("FRoomDetailId")
                        .HasColumnType("int")
                        .HasColumnName("fRoomDetailId");

                    b.Property<int?>("FRoomQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("fRoomQty");

                    b.Property<decimal?>("FTotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("fTotalPrice");

                    b.HasKey("FId")
                        .HasName("PK__tOrder_H__D9F8227C2BD13B65");

                    b.HasIndex("FHotelId");

                    b.HasIndex("FOrderId");

                    b.HasIndex("FRoomDetailId");

                    b.ToTable("tOrder_Hotel_Detail", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TOrderWalkDetail", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FAdditionlＭessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FAmount")
                        .HasColumnType("int");

                    b.Property<int?>("FEmployeeServiceId")
                        .HasColumnType("int")
                        .HasColumnName("fEmployeeServiceId");

                    b.Property<int?>("FOrderId")
                        .HasColumnType("int")
                        .HasColumnName("fOrderId");

                    b.Property<decimal?>("FServicePrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("fServicePrice");

                    b.Property<decimal?>("FTotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("fTotalPrice");

                    b.Property<DateTime?>("FWalkEnd")
                        .HasColumnType("datetime")
                        .HasColumnName("fWalkEnd");

                    b.Property<DateTime?>("FWalkStart")
                        .HasColumnType("datetime")
                        .HasColumnName("fWalkStart");

                    b.HasKey("FId")
                        .HasName("PK__tOrder_W__D9F8227C74BA78DA");

                    b.HasIndex("FEmployeeServiceId");

                    b.HasIndex("FOrderId");

                    b.ToTable("tOrder_Walk_Detail", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TPetList", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<int>("FMemberId")
                        .HasColumnType("int")
                        .HasColumnName("fMemberId");

                    b.Property<int?>("FPetAge")
                        .HasColumnType("int")
                        .HasColumnName("fPetAge");

                    b.Property<DateTime?>("FPetBirthday")
                        .HasColumnType("date")
                        .HasColumnName("fPetBirthday");

                    b.Property<int?>("FPetBlackList")
                        .HasColumnType("int")
                        .HasColumnName("fPetBlackList");

                    b.Property<int?>("FPetChildFriendly")
                        .HasColumnType("int")
                        .HasColumnName("fPetChildFriendly");

                    b.Property<int?>("FPetDe")
                        .HasColumnType("int")
                        .HasColumnName("fPetDe");

                    b.Property<string>("FPetImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fPetImagePath");

                    b.Property<string>("FPetMemo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fPetMemo");

                    b.Property<string>("FPetName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fPetName");

                    b.Property<int?>("FPetPetFriendly")
                        .HasColumnType("int")
                        .HasColumnName("fPetPetFriendly");

                    b.Property<int?>("FPetTrained")
                        .HasColumnType("int")
                        .HasColumnName("fPetTrained");

                    b.Property<int?>("FPetWeight")
                        .HasColumnType("int")
                        .HasColumnName("fPetWeight");

                    b.HasKey("FId");

                    b.HasIndex("FMemberId");

                    b.ToTable("tPetList", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TPriceFluctuation", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<int?>("FMonth")
                        .HasColumnType("int")
                        .HasColumnName("fMonth");

                    b.Property<decimal?>("FMultiplier")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("fMultiplier");

                    b.HasKey("FId")
                        .HasName("PK__tPrice_F__D9F8227CF3786956");

                    b.ToTable("tPrice_Fluctuation", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TQtyStatus", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<int?>("FBigDogRoom")
                        .HasColumnType("int")
                        .HasColumnName("fBig_dog_room");

                    b.Property<int?>("FCatRoom")
                        .HasColumnType("int")
                        .HasColumnName("fCat_room");

                    b.Property<DateTime?>("FDate")
                        .HasColumnType("date")
                        .HasColumnName("fDate");

                    b.Property<int?>("FHotelId")
                        .HasColumnType("int")
                        .HasColumnName("fHotel_id");

                    b.Property<int?>("FMiddleDogRoom")
                        .HasColumnType("int")
                        .HasColumnName("fMiddle_dog_room");

                    b.Property<int?>("FSmallDogRoom")
                        .HasColumnType("int")
                        .HasColumnName("fSmall_dog_room");

                    b.HasKey("FId")
                        .HasName("PK__tQty_Sta__D9F8227C4DAF927C");

                    b.HasIndex("FHotelId");

                    b.ToTable("tQty_Status", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TRoomType", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fName");

                    b.HasKey("FId")
                        .HasName("PK__tRoom_ty__D9F8227CB8488A7C");

                    b.ToTable("tRoom_types", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TRoomsDetail", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<int?>("FHotelId")
                        .HasColumnType("int")
                        .HasColumnName("fHotel_id");

                    b.Property<string>("FImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fImage");

                    b.Property<bool>("FIsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("fIs_delete");

                    b.Property<decimal?>("FPrice")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("fPrice");

                    b.Property<int?>("FQty")
                        .HasColumnType("int")
                        .HasColumnName("fQty");

                    b.Property<string>("FRoomSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FRoomtypeId")
                        .HasColumnType("int")
                        .HasColumnName("fRoomtype_id");

                    b.HasKey("FId")
                        .HasName("PK__tRooms_D__D9F8227C2AF05BC7");

                    b.HasIndex("FHotelId");

                    b.HasIndex("FRoomtypeId");

                    b.ToTable("tRooms_Detail", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TSourceList", b =>
                {
                    b.Property<int>("FSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fSourceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FSourceId"));

                    b.Property<string>("FSourceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fSourceName");

                    b.HasKey("FSourceId");

                    b.ToTable("tSourceList", (string)null);
                });

            modelBuilder.Entity("PetService_Project.Models.TWalkReview", b =>
                {
                    b.Property<int>("FId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FId"));

                    b.Property<string>("FContent")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("fContent");

                    b.Property<DateTime?>("FCreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fCreated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("FEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("fEmployee_Id");

                    b.Property<bool>("FIsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("fIs_delete");

                    b.Property<int>("FMemberId")
                        .HasColumnType("int")
                        .HasColumnName("fMember_id");

                    b.Property<int>("FOrderId")
                        .HasColumnType("int")
                        .HasColumnName("fOrder_id");

                    b.Property<byte?>("FRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("fRating");

                    b.Property<DateTime?>("FUpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("fUpdated_at");

                    b.HasKey("FId")
                        .HasName("PK__tWalk_re__D9F8227CF51DCEC5");

                    b.HasIndex("FMemberId");

                    b.HasIndex("FOrderId");

                    b.ToTable("tWalk_Reviews", (string)null);
                });

            modelBuilder.Entity("PetService_Project_Api.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("GoogleAvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PetService_Project_Api.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PetService_Project_Api.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetService_Project_Api.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PetService_Project_Api.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetService_Project.Models.TChatMessage", b =>
                {
                    b.HasOne("PetService_Project.Models.TChatSession", "FSession")
                        .WithMany("TChatMessages")
                        .HasForeignKey("FSessionId")
                        .IsRequired()
                        .HasConstraintName("FK_tChatMessage_tChatSession");

                    b.Navigation("FSession");
                });

            modelBuilder.Entity("PetService_Project.Models.TChatSession", b =>
                {
                    b.HasOne("PetService_Project.Models.TEmployee", "FEmployee")
                        .WithMany("TChatSessions")
                        .HasForeignKey("FEmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_tChatSession_tEmployee");

                    b.HasOne("PetService_Project.Models.TMember", "FMember")
                        .WithMany("TChatSessions")
                        .HasForeignKey("FMemberId")
                        .IsRequired()
                        .HasConstraintName("FK_tChatSession_tMember");

                    b.Navigation("FEmployee");

                    b.Navigation("FMember");
                });

            modelBuilder.Entity("PetService_Project.Models.TEmployeePhoto", b =>
                {
                    b.HasOne("PetService_Project.Models.TEmployee", "FEmployee")
                        .WithMany("TEmployeePhotos")
                        .HasForeignKey("FEmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_tEmployee_Photo_tEmployee");

                    b.Navigation("FEmployee");
                });

            modelBuilder.Entity("PetService_Project.Models.TEmployeeService", b =>
                {
                    b.HasOne("PetService_Project.Models.TDistrict", "FDistrict")
                        .WithMany("TEmployeeServices")
                        .HasForeignKey("FDistrictId")
                        .IsRequired()
                        .HasConstraintName("FK__tEmployee__fDist__412EB0B6");

                    b.HasOne("PetService_Project.Models.TEmployee", "FEmployee")
                        .WithMany("TEmployeeServices")
                        .HasForeignKey("FEmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_tEmployee_Service_tEmployee");

                    b.Navigation("FDistrict");

                    b.Navigation("FEmployee");
                });

            modelBuilder.Entity("PetService_Project.Models.THotelItem", b =>
                {
                    b.HasOne("PetService_Project.Models.THotel", "FHotel")
                        .WithMany("THotelItems")
                        .HasForeignKey("FHotelId")
                        .HasConstraintName("FK_HotelItems_Hotels");

                    b.Navigation("FHotel");
                });

            modelBuilder.Entity("PetService_Project.Models.THotelReview", b =>
                {
                    b.HasOne("PetService_Project.Models.THotel", "FHotel")
                        .WithMany("THotelReviews")
                        .HasForeignKey("FHotelId")
                        .HasConstraintName("FK_tHotel_Reviews_Hotels");

                    b.HasOne("PetService_Project.Models.TMember", "FMember")
                        .WithMany("THotelReviews")
                        .HasForeignKey("FMemberId")
                        .HasConstraintName("FK_tHotel_Reviews_tMember");

                    b.HasOne("PetService_Project.Models.TOrder", "FOrder")
                        .WithMany("THotelReviews")
                        .HasForeignKey("FOrderId")
                        .HasConstraintName("FK_tHotel_Reviews_tOrders");

                    b.HasOne("PetService_Project.Models.TRoomType", "FRoomtype")
                        .WithMany("THotelReviews")
                        .HasForeignKey("FRoomtypeId")
                        .HasConstraintName("FK_tHotel_Reviews_RoomTypes");

                    b.Navigation("FHotel");

                    b.Navigation("FMember");

                    b.Navigation("FOrder");

                    b.Navigation("FRoomtype");
                });

            modelBuilder.Entity("PetService_Project.Models.TMemberSource", b =>
                {
                    b.HasOne("PetService_Project.Models.TMember", "FMember")
                        .WithMany("TMemberSources")
                        .HasForeignKey("FMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tMemberSource_fMemberId");

                    b.HasOne("PetService_Project.Models.TSourceList", "FSource")
                        .WithMany("TMemberSources")
                        .HasForeignKey("FSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tMemberSource_fSourceId");

                    b.Navigation("FMember");

                    b.Navigation("FSource");
                });

            modelBuilder.Entity("PetService_Project.Models.TNewsFile", b =>
                {
                    b.HasOne("PetService_Project.Models.TNews", "FNews")
                        .WithMany("TNewsFiles")
                        .HasForeignKey("FNewsId")
                        .HasConstraintName("FK_NewFiles_News");

                    b.Navigation("FNews");
                });

            modelBuilder.Entity("PetService_Project.Models.TOrderHotelDetail", b =>
                {
                    b.HasOne("PetService_Project.Models.THotel", "FHotel")
                        .WithMany("TOrderHotelDetails")
                        .HasForeignKey("FHotelId")
                        .HasConstraintName("FK_OrderHotel_Hotel");

                    b.HasOne("PetService_Project.Models.TOrder", "FOrder")
                        .WithMany("TOrderHotelDetails")
                        .HasForeignKey("FOrderId")
                        .HasConstraintName("FK_tOrder_Hotel_Detail_tOrders");

                    b.HasOne("PetService_Project.Models.TRoomsDetail", "FRoomDetail")
                        .WithMany("TOrderHotelDetails")
                        .HasForeignKey("FRoomDetailId")
                        .HasConstraintName("FK_OrderHotel_RoomDetail");

                    b.Navigation("FHotel");

                    b.Navigation("FOrder");

                    b.Navigation("FRoomDetail");
                });

            modelBuilder.Entity("PetService_Project.Models.TOrderWalkDetail", b =>
                {
                    b.HasOne("PetService_Project.Models.TEmployeeService", "FEmployeeService")
                        .WithMany("TOrderWalkDetails")
                        .HasForeignKey("FEmployeeServiceId")
                        .HasConstraintName("FK_OrderWalk_Service");

                    b.HasOne("PetService_Project.Models.TOrder", "FOrder")
                        .WithMany("TOrderWalkDetails")
                        .HasForeignKey("FOrderId")
                        .HasConstraintName("FK_tOrder_Walk_Detail_tOrders");

                    b.Navigation("FEmployeeService");

                    b.Navigation("FOrder");
                });

            modelBuilder.Entity("PetService_Project.Models.TPetList", b =>
                {
                    b.HasOne("PetService_Project.Models.TMember", "FMember")
                        .WithMany("TPetLists")
                        .HasForeignKey("FMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tPetList_fMemberId");

                    b.Navigation("FMember");
                });

            modelBuilder.Entity("PetService_Project.Models.TQtyStatus", b =>
                {
                    b.HasOne("PetService_Project.Models.THotel", "FHotel")
                        .WithMany("TQtyStatuses")
                        .HasForeignKey("FHotelId")
                        .HasConstraintName("FK_QtyStatus_Hotels");

                    b.Navigation("FHotel");
                });

            modelBuilder.Entity("PetService_Project.Models.TRoomsDetail", b =>
                {
                    b.HasOne("PetService_Project.Models.THotel", "FHotel")
                        .WithMany("TRoomsDetails")
                        .HasForeignKey("FHotelId")
                        .HasConstraintName("FK_RoomsDetail_Hotels");

                    b.HasOne("PetService_Project.Models.TRoomType", "FRoomtype")
                        .WithMany("TRoomsDetails")
                        .HasForeignKey("FRoomtypeId")
                        .HasConstraintName("FK_RoomsDetail_RoomTypes");

                    b.Navigation("FHotel");

                    b.Navigation("FRoomtype");
                });

            modelBuilder.Entity("PetService_Project.Models.TWalkReview", b =>
                {
                    b.HasOne("PetService_Project.Models.TMember", "FMember")
                        .WithMany("TWalkReviews")
                        .HasForeignKey("FMemberId")
                        .IsRequired()
                        .HasConstraintName("FK_tWalk_Reviews_tMember");

                    b.HasOne("PetService_Project.Models.TOrder", "FOrder")
                        .WithMany("TWalkReviews")
                        .HasForeignKey("FOrderId")
                        .IsRequired()
                        .HasConstraintName("FK_tWalk_Reviews_tOrders");

                    b.Navigation("FMember");

                    b.Navigation("FOrder");
                });

            modelBuilder.Entity("PetService_Project.Models.TChatSession", b =>
                {
                    b.Navigation("TChatMessages");
                });

            modelBuilder.Entity("PetService_Project.Models.TDistrict", b =>
                {
                    b.Navigation("TEmployeeServices");
                });

            modelBuilder.Entity("PetService_Project.Models.TEmployee", b =>
                {
                    b.Navigation("TChatSessions");

                    b.Navigation("TEmployeePhotos");

                    b.Navigation("TEmployeeServices");
                });

            modelBuilder.Entity("PetService_Project.Models.TEmployeeService", b =>
                {
                    b.Navigation("TOrderWalkDetails");
                });

            modelBuilder.Entity("PetService_Project.Models.THotel", b =>
                {
                    b.Navigation("THotelItems");

                    b.Navigation("THotelReviews");

                    b.Navigation("TOrderHotelDetails");

                    b.Navigation("TQtyStatuses");

                    b.Navigation("TRoomsDetails");
                });

            modelBuilder.Entity("PetService_Project.Models.TMember", b =>
                {
                    b.Navigation("TChatSessions");

                    b.Navigation("THotelReviews");

                    b.Navigation("TMemberSources");

                    b.Navigation("TPetLists");

                    b.Navigation("TWalkReviews");
                });

            modelBuilder.Entity("PetService_Project.Models.TNews", b =>
                {
                    b.Navigation("TNewsFiles");
                });

            modelBuilder.Entity("PetService_Project.Models.TOrder", b =>
                {
                    b.Navigation("THotelReviews");

                    b.Navigation("TOrderHotelDetails");

                    b.Navigation("TOrderWalkDetails");

                    b.Navigation("TWalkReviews");
                });

            modelBuilder.Entity("PetService_Project.Models.TRoomType", b =>
                {
                    b.Navigation("THotelReviews");

                    b.Navigation("TRoomsDetails");
                });

            modelBuilder.Entity("PetService_Project.Models.TRoomsDetail", b =>
                {
                    b.Navigation("TOrderHotelDetails");
                });

            modelBuilder.Entity("PetService_Project.Models.TSourceList", b =>
                {
                    b.Navigation("TMemberSources");
                });
#pragma warning restore 612, 618
        }
    }
}
